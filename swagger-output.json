{
  "openapi": "3.0.0",
  "info": {
    "title": "My Medical System API",
    "version": "1.0.0",
    "description": "API documentation for the Medical System"
  },
  "servers": [
    {
      "url": "http://localhost:3030/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input or user already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns token"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "summary": "Verify user email using code",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "code"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Invalid code or email"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Request password reset code",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent"
          },
          "404": {
            "description": "Email not found"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset password using code",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "code",
                  "newPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid code or email"
          }
        }
      }
    },
    "/auth/resend-code": {
      "post": {
        "summary": "Resend email verification code",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code resent"
          }
        }
      }
    },
    "/auth/admin/create-user": {
      "post": {
        "summary": "Admin creates a new user",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "role"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "admin",
                      "doctor"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created by admin"
          },
          "403": {
            "description": "Forbidden â€“ only admins allowed"
          }
        }
      }
    },
    "/complaints": {
      "post": {
        "summary": "Submit a new complaint (any logged-in user)",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "subject",
                  "description"
                ],
                "properties": {
                  "subject": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "related_appointment_id": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Complaint submitted"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get all complaints (admin only)",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of complaints"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/complaints/user": {
      "get": {
        "summary": "Get complaints by logged-in user (user only)",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of complaints submitted by user"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/complaints/{id}": {
      "get": {
        "summary": "Get a complaint by ID (admin only)",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Complaint found"
          },
          "404": {
            "description": "Complaint not found"
          }
        }
      },
      "put": {
        "summary": "Update complaint status (admin only)",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "Open",
                      "In Progress",
                      "Resolved",
                      "Closed"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Complaint status updated"
          },
          "404": {
            "description": "Complaint not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a complaint by ID (admin only)",
        "tags": [
          "Complaints"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Complaint deleted"
          },
          "404": {
            "description": "Complaint not found"
          }
        }
      }
    },
    "/dashboard/stats": {
      "get": {
        "summary": "Get dashboard summary statistics",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Summary stats returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalUsers": {
                      "type": "number"
                    },
                    "totalDoctors": {
                      "type": "number"
                    },
                    "totalAppointmentsToday": {
                      "type": "number"
                    },
                    "totalRevenueToday": {
                      "type": "number"
                    },
                    "openComplaints": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/appointments/weekly": {
      "get": {
        "summary": "Get weekly appointment data (Mon-Fri)",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Weekly appointment chart data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "appointments": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/appointments/status": {
      "get": {
        "summary": "Get appointment status distribution",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Pie chart data for appointment statuses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/satisfaction": {
      "get": {
        "summary": "Get patient satisfaction score",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Satisfaction score as percentage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "score": {
                      "type": "number",
                      "description": "Percentage value (0-100)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/appointments/recent": {
      "get": {
        "summary": "Get recent appointments list",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Recent appointment data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "patient": {
                        "type": "string"
                      },
                      "doctor": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string",
                        "format": "date"
                      },
                      "time": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/complaints/recent": {
      "get": {
        "summary": "Get recent complaints list",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Recent complaints data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "patient": {
                        "type": "string"
                      },
                      "issue": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/doctor-meetings": {
      "post": {
        "summary": "Create a new doctor meeting (admin only)",
        "tags": [
          "Doctor Meetings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "meeting_date",
                  "meeting_time"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "meeting_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "meeting_time": {
                    "type": "string",
                    "format": "time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Meeting created"
          }
        }
      },
      "get": {
        "summary": "Get all doctor meetings (admin/public)",
        "tags": [
          "Doctor Meetings"
        ],
        "responses": {
          "200": {
            "description": "List of meetings"
          }
        }
      }
    },
    "/doctor-meetings/{id}": {
      "delete": {
        "summary": "Delete a meeting (admin only)",
        "tags": [
          "Doctor Meetings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting deleted"
          }
        }
      },
      "get": {
        "summary": "Get a meeting by ID (admin/public)",
        "tags": [
          "Doctor Meetings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting details"
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/doctor-meetings/attendance/{id}": {
      "put": {
        "summary": "Update attendance status for a doctor",
        "tags": [
          "Doctor Meetings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attended": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "example": "present"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attendance updated"
          }
        }
      },
      "delete": {
        "summary": "Delete a doctor's attendance record (admin only)",
        "tags": [
          "Doctor Meetings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attendance record deleted"
          }
        }
      }
    },
    "/payments": {
      "get": {
        "summary": "Get all payments (admin only)",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "summary": "Create a new payment (admin only)",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "patientId",
                  "method"
                ],
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "patientId": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Get a payment by ID (any authenticated user)",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Payment found"
          },
          "404": {
            "description": "Payment not found"
          }
        }
      },
      "put": {
        "summary": "Update a payment (admin only)",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "method": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment updated"
          },
          "404": {
            "description": "Payment not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a payment (admin only)",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Payment deleted"
          },
          "404": {
            "description": "Payment not found"
          }
        }
      }
    },
    "/checkout": {
      "post": {
        "summary": "Create a Stripe checkout session",
        "tags": [
          "Payments"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "appointmentId"
                ],
                "properties": {
                  "appointmentId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Checkout session created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or missing data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/webhook": {
      "post": {
        "summary": "Handle Stripe webhook events",
        "tags": [
          "Payments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Raw Stripe webhook event object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook event received and processed"
          },
          "400": {
            "description": "Invalid Stripe signature or event format"
          },
          "500": {
            "description": "Failed to record payment"
          }
        }
      }
    },
    "/prescriptions": {
      "get": {
        "summary": "Get all prescriptions (doctor only)",
        "tags": [
          "Prescriptions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of prescriptions"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "summary": "Create a new prescription (doctor only)",
        "tags": [
          "Prescriptions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "patientId",
                  "medication",
                  "dosage"
                ],
                "properties": {
                  "patientId": {
                    "type": "string"
                  },
                  "medication": {
                    "type": "string"
                  },
                  "dosage": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Prescription created"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/prescriptions/user/{userId}": {
      "get": {
        "summary": "Get prescriptions by user ID (admin, doctor, or that user)",
        "tags": [
          "Prescriptions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prescriptions found"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No prescriptions found"
          }
        }
      }
    },
    "/prescriptions/{id}": {
      "get": {
        "summary": "Get a prescription by ID (any logged-in user â€” doctor, admin, or patient)",
        "tags": [
          "Prescriptions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prescription found"
          },
          "403": {
            "description": "Unauthorized or forbidden"
          },
          "404": {
            "description": "Prescription not found"
          }
        }
      },
      "put": {
        "summary": "Update a prescription (doctor only)",
        "tags": [
          "Prescriptions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "medication": {
                    "type": "string"
                  },
                  "dosage": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Prescription updated"
          },
          "404": {
            "description": "Prescription not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a prescription (admin only)",
        "tags": [
          "Prescriptions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Prescription deleted"
          },
          "404": {
            "description": "Prescription not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users (admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID (admin or the user themself)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "403": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user (admin or the user themself)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user (admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Appointments",
      "description": "Appointment management"
    },
    {
      "name": "Auth",
      "description": "User authentication and account operations"
    },
    {
      "name": "Complaints",
      "description": "Complaint management endpoints"
    },
    {
      "name": "Consultations",
      "description": "Consultation management"
    },
    {
      "name": "Dashboard",
      "description": "Admin dashboard analytics endpoints"
    },
    {
      "name": "Doctor Meetings",
      "description": "Manage doctor meetings and attendance"
    },
    {
      "name": "Payments",
      "description": "Payment transaction management"
    },
    {
      "name": "Prescriptions",
      "description": "Prescription management"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    }
  ]
}